* TODO [0/3]
  - [ ] class_ [0/4]
    - [ ] @elementwise basic test
    - [ ] @broadcast basic test

    - [ ] @elementwise basic implementation
    - [ ] @broadcast basic implementation

  - [ ] operator [0/2]
    - [ ] elementiwise 'keys' argument
    - [ ] broadcast 'keys' argument

  - [ ] make_dataclass [0/3]
    - [ ] from_dict(dict, **kwargs)
      Creates a dataclass based on the types in dict and
      creates a instance from it values

    - [ ] from_dict_example(dict, **kwargs)
      Creates a dataclass based on the types in dict

    - [ ] from_dict_template(dict, **kwargs)
      Creates a dataclass based on a dict template

      from_dict_template({'x': int, 'y': int}, name='Point', **kwargs)

      equivalent to

      @dataclass(**kwargs)
      class Point:
          x: int
          y: int
